// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.screenshot.impl.protobuf.client;

@SuppressWarnings("hiding")
public interface RemoteScreenshotConfigProtobuf {

  public static final class RemoteScreenshotConfig extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    public static final class ScreenshotConfig extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      public static final class ApiCaptorConfig extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        private static volatile ApiCaptorConfig[] _emptyArray;
        public static ApiCaptorConfig[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new ApiCaptorConfig[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional bool enabled = 1 [default = true];
        public boolean enabled;

        public ApiCaptorConfig() {
          clear();
        }

        public ApiCaptorConfig clear() {
          enabled = true;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.enabled != true) {
            output.writeBool(1, this.enabled);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.enabled != true) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(1, this.enabled);
          }
          return size;
        }

        @Override
        public ApiCaptorConfig mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.enabled = input.readBool();
                break;
              }
            }
          }
        }

        public static ApiCaptorConfig parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ApiCaptorConfig(), data);
        }

        public static ApiCaptorConfig parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new ApiCaptorConfig().mergeFrom(input);
        }
      }

      public static final class ServiceCaptorConfig extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        private static volatile ServiceCaptorConfig[] _emptyArray;
        public static ServiceCaptorConfig[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new ServiceCaptorConfig[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional bool enabled = 1 [default = true];
        public boolean enabled;

        // optional int64 delaySeconds = 2 [default = 1];
        public long delaySeconds;

        public ServiceCaptorConfig() {
          clear();
        }

        public ServiceCaptorConfig clear() {
          enabled = true;
          delaySeconds = 1L;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.enabled != true) {
            output.writeBool(1, this.enabled);
          }
          if (this.delaySeconds != 1L) {
            output.writeInt64(2, this.delaySeconds);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.enabled != true) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(1, this.enabled);
          }
          if (this.delaySeconds != 1L) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeInt64Size(2, this.delaySeconds);
          }
          return size;
        }

        @Override
        public ServiceCaptorConfig mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.enabled = input.readBool();
                break;
              }
              case 16: {
                this.delaySeconds = input.readInt64();
                break;
              }
            }
          }
        }

        public static ServiceCaptorConfig parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ServiceCaptorConfig(), data);
        }

        public static ServiceCaptorConfig parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new ServiceCaptorConfig().mergeFrom(input);
        }
      }

      public static final class ContentObserverCaptorConfig extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        private static volatile ContentObserverCaptorConfig[] _emptyArray;
        public static ContentObserverCaptorConfig[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new ContentObserverCaptorConfig[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional bool enabled = 1 [default = true];
        public boolean enabled;

        // optional int64 detectWindowSeconds = 2 [default = 5];
        public long detectWindowSeconds;

        // repeated string mediaStoreColumnNames = 3;
        public java.lang.String[] mediaStoreColumnNames;

        public ContentObserverCaptorConfig() {
          clear();
        }

        public ContentObserverCaptorConfig clear() {
          enabled = true;
          detectWindowSeconds = 5L;
          mediaStoreColumnNames = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.enabled != true) {
            output.writeBool(1, this.enabled);
          }
          if (this.detectWindowSeconds != 5L) {
            output.writeInt64(2, this.detectWindowSeconds);
          }
          if (this.mediaStoreColumnNames != null && this.mediaStoreColumnNames.length > 0) {
            for (int i = 0; i < this.mediaStoreColumnNames.length; i++) {
              java.lang.String element = this.mediaStoreColumnNames[i];
              if (element != null) {
                output.writeString(3, element);
              }
            }
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.enabled != true) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(1, this.enabled);
          }
          if (this.detectWindowSeconds != 5L) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeInt64Size(2, this.detectWindowSeconds);
          }
          if (this.mediaStoreColumnNames != null && this.mediaStoreColumnNames.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.mediaStoreColumnNames.length; i++) {
              java.lang.String element = this.mediaStoreColumnNames[i];
              if (element != null) {
                dataCount++;
                dataSize += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          return size;
        }

        @Override
        public ContentObserverCaptorConfig mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.enabled = input.readBool();
                break;
              }
              case 16: {
                this.detectWindowSeconds = input.readInt64();
                break;
              }
              case 26: {
                int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 26);
                int i = this.mediaStoreColumnNames == null ? 0 : this.mediaStoreColumnNames.length;
                java.lang.String[] newArray = new java.lang.String[i + arrayLength];
                if (i != 0) {
                  java.lang.System.arraycopy(this.mediaStoreColumnNames, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.mediaStoreColumnNames = newArray;
                break;
              }
            }
          }
        }

        public static ContentObserverCaptorConfig parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ContentObserverCaptorConfig(), data);
        }

        public static ContentObserverCaptorConfig parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new ContentObserverCaptorConfig().mergeFrom(input);
        }
      }

      private static volatile ScreenshotConfig[] _emptyArray;
      public static ScreenshotConfig[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new ScreenshotConfig[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional .RemoteScreenshotConfig.ScreenshotConfig.ApiCaptorConfig apiCaptorConfig = 1;
      public RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ApiCaptorConfig apiCaptorConfig;

      // optional .RemoteScreenshotConfig.ScreenshotConfig.ServiceCaptorConfig serviceCaptorConfig = 2;
      public RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ServiceCaptorConfig serviceCaptorConfig;

      // optional .RemoteScreenshotConfig.ScreenshotConfig.ContentObserverCaptorConfig contentObserverCaptorConfig = 3;
      public RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ContentObserverCaptorConfig contentObserverCaptorConfig;

      public ScreenshotConfig() {
        clear();
      }

      public ScreenshotConfig clear() {
        apiCaptorConfig = null;
        serviceCaptorConfig = null;
        contentObserverCaptorConfig = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.apiCaptorConfig != null) {
          output.writeMessage(1, this.apiCaptorConfig);
        }
        if (this.serviceCaptorConfig != null) {
          output.writeMessage(2, this.serviceCaptorConfig);
        }
        if (this.contentObserverCaptorConfig != null) {
          output.writeMessage(3, this.contentObserverCaptorConfig);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.apiCaptorConfig != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(1, this.apiCaptorConfig);
        }
        if (this.serviceCaptorConfig != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.serviceCaptorConfig);
        }
        if (this.contentObserverCaptorConfig != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.contentObserverCaptorConfig);
        }
        return size;
      }

      @Override
      public ScreenshotConfig mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              if (this.apiCaptorConfig == null) {
                this.apiCaptorConfig = new RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ApiCaptorConfig();
              }
              input.readMessage(this.apiCaptorConfig);
              break;
            }
            case 18: {
              if (this.serviceCaptorConfig == null) {
                this.serviceCaptorConfig = new RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ServiceCaptorConfig();
              }
              input.readMessage(this.serviceCaptorConfig);
              break;
            }
            case 26: {
              if (this.contentObserverCaptorConfig == null) {
                this.contentObserverCaptorConfig = new RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig.ContentObserverCaptorConfig();
              }
              input.readMessage(this.contentObserverCaptorConfig);
              break;
            }
          }
        }
      }

      public static ScreenshotConfig parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ScreenshotConfig(), data);
      }

      public static ScreenshotConfig parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new ScreenshotConfig().mergeFrom(input);
      }
    }

    private static volatile RemoteScreenshotConfig[] _emptyArray;
    public static RemoteScreenshotConfig[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RemoteScreenshotConfig[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool enabled = 1 [default = true];
    public boolean enabled;

    // optional .RemoteScreenshotConfig.ScreenshotConfig config = 2;
    public RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig config;

    public RemoteScreenshotConfig() {
      clear();
    }

    public RemoteScreenshotConfig clear() {
      enabled = true;
      config = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.enabled != true) {
        output.writeBool(1, this.enabled);
      }
      if (this.config != null) {
        output.writeMessage(2, this.config);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.enabled != true) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.enabled);
      }
      if (this.config != null) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.config);
      }
      return size;
    }

    @Override
    public RemoteScreenshotConfig mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.enabled = input.readBool();
            break;
          }
          case 18: {
            if (this.config == null) {
              this.config = new RemoteScreenshotConfigProtobuf.RemoteScreenshotConfig.ScreenshotConfig();
            }
            input.readMessage(this.config);
            break;
          }
        }
      }
    }

    public static RemoteScreenshotConfig parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new RemoteScreenshotConfig(), data);
    }

    public static RemoteScreenshotConfig parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RemoteScreenshotConfig().mergeFrom(input);
    }
  }
}
