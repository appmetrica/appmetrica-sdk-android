// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.impl.protobuf.backend;

@SuppressWarnings("hiding")
public interface EventProto {

  public static final class ReportMessage extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    // enum OptionalBool
    public static final int OPTIONAL_BOOL_UNDEFINED = -1;
    public static final int OPTIONAL_BOOL_FALSE = 0;
    public static final int OPTIONAL_BOOL_TRUE = 1;

    public static final class Time extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile Time[] _emptyArray;
      public static Time[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Time[0];
            }
          }
        }
        return _emptyArray;
      }

      // required uint64 timestamp = 1;
      public long timestamp;

      // required sint32 time_zone = 2;
      public int timeZone;

      // optional int64 server_time_offset = 3;
      public long serverTimeOffset;

      // optional bool obtained_before_first_synchronization = 4 [default = false];
      public boolean obtainedBeforeFirstSynchronization;

      public Time() {
        clear();
      }

      public Time clear() {
        timestamp = 0L;
        timeZone = 0;
        serverTimeOffset = 0L;
        obtainedBeforeFirstSynchronization = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeUInt64(1, this.timestamp);
        output.writeSInt32(2, this.timeZone);
        if (this.serverTimeOffset != 0L) {
          output.writeInt64(3, this.serverTimeOffset);
        }
        if (this.obtainedBeforeFirstSynchronization != false) {
          output.writeBool(4, this.obtainedBeforeFirstSynchronization);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.timestamp);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeSInt32Size(2, this.timeZone);
        if (this.serverTimeOffset != 0L) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt64Size(3, this.serverTimeOffset);
        }
        if (this.obtainedBeforeFirstSynchronization != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(4, this.obtainedBeforeFirstSynchronization);
        }
        return size;
      }

      @Override
      public Time mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.timestamp = input.readUInt64();
              break;
            }
            case 16: {
              this.timeZone = input.readSInt32();
              break;
            }
            case 24: {
              this.serverTimeOffset = input.readInt64();
              break;
            }
            case 32: {
              this.obtainedBeforeFirstSynchronization = input.readBool();
              break;
            }
          }
        }
      }

      public static Time parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Time(), data);
      }

      public static Time parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Time().mergeFrom(input);
      }
    }

    public static final class Location extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      // enum Provider
      public static final int PROVIDER_UNKNOWN = 0;
      public static final int PROVIDER_GPS = 1;
      public static final int PROVIDER_NETWORK = 2;

      private static volatile Location[] _emptyArray;
      public static Location[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Location[0];
            }
          }
        }
        return _emptyArray;
      }

      // required double lat = 1;
      public double lat;

      // required double lon = 2;
      public double lon;

      // optional uint64 timestamp = 3;
      public long timestamp;

      // optional uint32 precision = 4;
      public int precision;

      // optional uint32 direction = 5;
      public int direction;

      // optional uint32 speed = 6;
      public int speed;

      // optional int32 altitude = 7;
      public int altitude;

      // optional .ReportMessage.Location.Provider provider = 8 [default = PROVIDER_UNKNOWN];
      public int provider;

      // optional string original_provider = 9;
      public java.lang.String originalProvider;

      public Location() {
        clear();
      }

      public Location clear() {
        lat = 0D;
        lon = 0D;
        timestamp = 0L;
        precision = 0;
        direction = 0;
        speed = 0;
        altitude = 0;
        provider = EventProto.ReportMessage.Location.PROVIDER_UNKNOWN;
        originalProvider = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeDouble(1, this.lat);
        output.writeDouble(2, this.lon);
        if (this.timestamp != 0L) {
          output.writeUInt64(3, this.timestamp);
        }
        if (this.precision != 0) {
          output.writeUInt32(4, this.precision);
        }
        if (this.direction != 0) {
          output.writeUInt32(5, this.direction);
        }
        if (this.speed != 0) {
          output.writeUInt32(6, this.speed);
        }
        if (this.altitude != 0) {
          output.writeInt32(7, this.altitude);
        }
        if (this.provider != EventProto.ReportMessage.Location.PROVIDER_UNKNOWN) {
          output.writeInt32(8, this.provider);
        }
        if (!this.originalProvider.equals("")) {
          output.writeString(9, this.originalProvider);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(1, this.lat);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(2, this.lon);
        if (this.timestamp != 0L) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(3, this.timestamp);
        }
        if (this.precision != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(4, this.precision);
        }
        if (this.direction != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(5, this.direction);
        }
        if (this.speed != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(6, this.speed);
        }
        if (this.altitude != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(7, this.altitude);
        }
        if (this.provider != EventProto.ReportMessage.Location.PROVIDER_UNKNOWN) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(8, this.provider);
        }
        if (!this.originalProvider.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(9, this.originalProvider);
        }
        return size;
      }

      @Override
      public Location mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              this.lat = input.readDouble();
              break;
            }
            case 17: {
              this.lon = input.readDouble();
              break;
            }
            case 24: {
              this.timestamp = input.readUInt64();
              break;
            }
            case 32: {
              this.precision = input.readUInt32();
              break;
            }
            case 40: {
              this.direction = input.readUInt32();
              break;
            }
            case 48: {
              this.speed = input.readUInt32();
              break;
            }
            case 56: {
              this.altitude = input.readInt32();
              break;
            }
            case 64: {
              int value = input.readInt32();
              switch (value) {
                case EventProto.ReportMessage.Location.PROVIDER_UNKNOWN:
                case EventProto.ReportMessage.Location.PROVIDER_GPS:
                case EventProto.ReportMessage.Location.PROVIDER_NETWORK:
                  this.provider = value;
                  break;
              }
              break;
            }
            case 74: {
              this.originalProvider = input.readString();
              break;
            }
          }
        }
      }

      public static Location parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Location(), data);
      }

      public static Location parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Location().mergeFrom(input);
      }
    }

    public static final class Session extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      // enum ConnectionType
      public static final int CONNECTION_CELL = 0;
      public static final int CONNECTION_WIFI = 1;
      public static final int CONNECTION_UNDEFINED = 2;
      public static final int CONNECTION_BLUETOOTH = 3;
      public static final int CONNECTION_ETHERNET = 4;
      public static final int CONNECTION_MOBILE_DUN = 5;
      public static final int CONNECTION_MOBILE_HIPRI = 6;
      public static final int CONNECTION_MOBILE_MMS = 7;
      public static final int CONNECTION_MOBILE_SUPL = 8;
      public static final int CONNECTION_VPN = 9;
      public static final int CONNECTION_WIMAX = 10;
      public static final int CONNECTION_LOWPAN = 11;
      public static final int CONNECTION_WIFI_AWARE = 12;

      public static final class SessionDesc extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        // enum SessionType
        public static final int SESSION_FOREGROUND = 0;
        public static final int SESSION_BACKGROUND = 1;
        public static final int SESSION_DIAGNOSTIC = 2;

        private static volatile SessionDesc[] _emptyArray;
        public static SessionDesc[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new SessionDesc[0];
              }
            }
          }
          return _emptyArray;
        }

        // required .ReportMessage.Time start_time = 1;
        public EventProto.ReportMessage.Time startTime;

        // required string locale = 2;
        public java.lang.String locale;

        // optional .ReportMessage.Session.SessionDesc.SessionType session_type = 5;
        public int sessionType;

        public SessionDesc() {
          clear();
        }

        public SessionDesc clear() {
          startTime = null;
          locale = "";
          sessionType = EventProto.ReportMessage.Session.SessionDesc.SESSION_FOREGROUND;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.startTime != null) {
            output.writeMessage(1, this.startTime);
          }
          output.writeString(2, this.locale);
          if (this.sessionType != EventProto.ReportMessage.Session.SessionDesc.SESSION_FOREGROUND) {
            output.writeInt32(5, this.sessionType);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.startTime != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, this.startTime);
          }
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.locale);
          if (this.sessionType != EventProto.ReportMessage.Session.SessionDesc.SESSION_FOREGROUND) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(5, this.sessionType);
          }
          return size;
        }

        @Override
        public SessionDesc mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                if (this.startTime == null) {
                  this.startTime = new EventProto.ReportMessage.Time();
                }
                input.readMessage(this.startTime);
                break;
              }
              case 18: {
                this.locale = input.readString();
                break;
              }
              case 40: {
                int value = input.readInt32();
                switch (value) {
                  case EventProto.ReportMessage.Session.SessionDesc.SESSION_FOREGROUND:
                  case EventProto.ReportMessage.Session.SessionDesc.SESSION_BACKGROUND:
                  case EventProto.ReportMessage.Session.SessionDesc.SESSION_DIAGNOSTIC:
                    this.sessionType = value;
                    break;
                }
                break;
              }
            }
          }
        }

        public static SessionDesc parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new SessionDesc(), data);
        }

        public static SessionDesc parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new SessionDesc().mergeFrom(input);
        }
      }

      public static final class Event extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        // enum EventType
        public static final int EVENT_INIT = 1;
        public static final int EVENT_START = 2;
        public static final int EVENT_CRASH = 3;
        public static final int EVENT_CLIENT = 4;
        public static final int EVENT_REFERRER = 5;
        public static final int EVENT_ERROR = 6;
        public static final int EVENT_ALIVE = 7;
        public static final int EVENT_FIRST = 13;
        public static final int EVENT_OPEN = 16;
        public static final int EVENT_UPDATE = 17;
        public static final int EVENT_PERMISSIONS = 18;
        public static final int EVENT_APP_FEATURES = 19;
        public static final int EVENT_PROFILE = 20;
        public static final int EVENT_REVENUE = 21;
        public static final int EVENT_PROTOBUF_ANR = 25;
        public static final int EVENT_PROTOBUF_CRASH = 26;
        public static final int EVENT_PROTOBUF_ERROR = 27;
        public static final int EVENT_CLEANUP = 29;
        public static final int EVENT_ECOMMERCE = 35;
        public static final int EVENT_WEBVIEW_SYNC = 38;
        public static final int EVENT_AD_REVENUE = 40;

        // enum EncodingType
        public static final int NONE = 0;
        public static final int RSA_AES_CBC = 1;
        public static final int GZIP = 2;

        // enum EventSource
        public static final int NATIVE = 0;
        public static final int JS = 1;

        public static final class NetworkInfo extends
            io.appmetrica.analytics.protobuf.nano.MessageNano {

          private static volatile NetworkInfo[] _emptyArray;
          public static NetworkInfo[] emptyArray() {
            // Lazily initializes the empty array
            if (_emptyArray == null) {
              synchronized (
                  io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
                if (_emptyArray == null) {
                  _emptyArray = new NetworkInfo[0];
                }
              }
            }
            return _emptyArray;
          }

          // optional .ReportMessage.Session.ConnectionType connection_type = 3 [default = CONNECTION_UNDEFINED];
          public int connectionType;

          // optional string cellular_network_type = 4;
          public java.lang.String cellularNetworkType;

          public NetworkInfo() {
            clear();
          }

          public NetworkInfo clear() {
            connectionType = EventProto.ReportMessage.Session.CONNECTION_UNDEFINED;
            cellularNetworkType = "";
            cachedSize = -1;
            return this;
          }

          @Override
          public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
              throws java.io.IOException {
            if (this.connectionType != EventProto.ReportMessage.Session.CONNECTION_UNDEFINED) {
              output.writeInt32(3, this.connectionType);
            }
            if (!this.cellularNetworkType.equals("")) {
              output.writeString(4, this.cellularNetworkType);
            }
            super.writeTo(output);
          }

          @Override
          protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.connectionType != EventProto.ReportMessage.Session.CONNECTION_UNDEFINED) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(3, this.connectionType);
            }
            if (!this.cellularNetworkType.equals("")) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSize(4, this.cellularNetworkType);
            }
            return size;
          }

          @Override
          public NetworkInfo mergeFrom(
                  io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                    return this;
                  }
                  break;
                }
                case 24: {
                  int value = input.readInt32();
                  switch (value) {
                    case EventProto.ReportMessage.Session.CONNECTION_CELL:
                    case EventProto.ReportMessage.Session.CONNECTION_WIFI:
                    case EventProto.ReportMessage.Session.CONNECTION_UNDEFINED:
                    case EventProto.ReportMessage.Session.CONNECTION_BLUETOOTH:
                    case EventProto.ReportMessage.Session.CONNECTION_ETHERNET:
                    case EventProto.ReportMessage.Session.CONNECTION_MOBILE_DUN:
                    case EventProto.ReportMessage.Session.CONNECTION_MOBILE_HIPRI:
                    case EventProto.ReportMessage.Session.CONNECTION_MOBILE_MMS:
                    case EventProto.ReportMessage.Session.CONNECTION_MOBILE_SUPL:
                    case EventProto.ReportMessage.Session.CONNECTION_VPN:
                    case EventProto.ReportMessage.Session.CONNECTION_WIMAX:
                    case EventProto.ReportMessage.Session.CONNECTION_LOWPAN:
                    case EventProto.ReportMessage.Session.CONNECTION_WIFI_AWARE:
                      this.connectionType = value;
                      break;
                  }
                  break;
                }
                case 34: {
                  this.cellularNetworkType = input.readString();
                  break;
                }
              }
            }
          }

          public static NetworkInfo parseFrom(byte[] data)
              throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
            return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new NetworkInfo(), data);
          }

          public static NetworkInfo parseFrom(
                  io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            return new NetworkInfo().mergeFrom(input);
          }
        }

        public static final class ExtrasEntry extends
            io.appmetrica.analytics.protobuf.nano.MessageNano {

          private static volatile ExtrasEntry[] _emptyArray;
          public static ExtrasEntry[] emptyArray() {
            // Lazily initializes the empty array
            if (_emptyArray == null) {
              synchronized (
                  io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
                if (_emptyArray == null) {
                  _emptyArray = new ExtrasEntry[0];
                }
              }
            }
            return _emptyArray;
          }

          // optional bytes key = 1;
          public byte[] key;

          // optional bytes value = 2;
          public byte[] value;

          public ExtrasEntry() {
            clear();
          }

          public ExtrasEntry clear() {
            key = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
            value = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
            cachedSize = -1;
            return this;
          }

          @Override
          public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
              throws java.io.IOException {
            if (!java.util.Arrays.equals(this.key, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
              output.writeBytes(1, this.key);
            }
            if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
              output.writeBytes(2, this.value);
            }
            super.writeTo(output);
          }

          @Override
          protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (!java.util.Arrays.equals(this.key, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                  .computeBytesSize(1, this.key);
            }
            if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                  .computeBytesSize(2, this.value);
            }
            return size;
          }

          @Override
          public ExtrasEntry mergeFrom(
                  io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  this.key = input.readBytes();
                  break;
                }
                case 18: {
                  this.value = input.readBytes();
                  break;
                }
              }
            }
          }

          public static ExtrasEntry parseFrom(byte[] data)
              throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
            return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ExtrasEntry(), data);
          }

          public static ExtrasEntry parseFrom(
                  io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            return new ExtrasEntry().mergeFrom(input);
          }
        }

        private static volatile Event[] _emptyArray;
        public static Event[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Event[0];
              }
            }
          }
          return _emptyArray;
        }

        // required uint64 number_in_session = 1;
        public long numberInSession;

        // required uint64 time = 2;
        public long time;

        // required uint32 type = 3;
        public int type;

        // optional string name = 4;
        public java.lang.String name;

        // optional bytes value = 5;
        public byte[] value;

        // optional .ReportMessage.Location location = 6;
        public EventProto.ReportMessage.Location location;

        // optional .ReportMessage.Session.Event.NetworkInfo network_info = 7;
        public EventProto.ReportMessage.Session.Event.NetworkInfo networkInfo;

        // optional string environment = 8;
        public java.lang.String environment;

        // optional uint32 bytes_truncated = 10;
        public int bytesTruncated;

        // optional .ReportMessage.Session.Event.EncodingType encoding_type = 12 [default = NONE];
        public int encodingType;

        // optional .ReportMessage.OptionalBool location_tracking_enabled = 13 [default = OPTIONAL_BOOL_UNDEFINED];
        public int locationTrackingEnabled;

        // optional bytes profile_id = 14;
        public byte[] profileId;

        // optional .ReportMessage.OptionalBool first_occurrence = 15 [default = OPTIONAL_BOOL_UNDEFINED];
        public int firstOccurrence;

        // optional uint64 global_number = 16;
        public long globalNumber;

        // optional uint64 number_of_type = 17;
        public long numberOfType;

        // optional .ReportMessage.Session.Event.EventSource source = 22 [default = NATIVE];
        public int source;

        // optional bool attribution_id_changed = 23 [default = false];
        public boolean attributionIdChanged;

        // optional uint64 open_id = 24 [default = 1];
        public long openId;

        // repeated .ReportMessage.Session.Event.ExtrasEntry extras = 25;
        public EventProto.ReportMessage.Session.Event.ExtrasEntry[] extras;

        public Event() {
          clear();
        }

        public Event clear() {
          numberInSession = 0L;
          time = 0L;
          type = 0;
          name = "";
          value = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
          location = null;
          networkInfo = null;
          environment = "";
          bytesTruncated = 0;
          encodingType = EventProto.ReportMessage.Session.Event.NONE;
          locationTrackingEnabled = EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED;
          profileId = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
          firstOccurrence = EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED;
          globalNumber = 0L;
          numberOfType = 0L;
          source = EventProto.ReportMessage.Session.Event.NATIVE;
          attributionIdChanged = false;
          openId = 1L;
          extras = EventProto.ReportMessage.Session.Event.ExtrasEntry.emptyArray();
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeUInt64(1, this.numberInSession);
          output.writeUInt64(2, this.time);
          output.writeUInt32(3, this.type);
          if (!this.name.equals("")) {
            output.writeString(4, this.name);
          }
          if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
            output.writeBytes(5, this.value);
          }
          if (this.location != null) {
            output.writeMessage(6, this.location);
          }
          if (this.networkInfo != null) {
            output.writeMessage(7, this.networkInfo);
          }
          if (!this.environment.equals("")) {
            output.writeString(8, this.environment);
          }
          if (this.bytesTruncated != 0) {
            output.writeUInt32(10, this.bytesTruncated);
          }
          if (this.encodingType != EventProto.ReportMessage.Session.Event.NONE) {
            output.writeInt32(12, this.encodingType);
          }
          if (this.locationTrackingEnabled != EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED) {
            output.writeInt32(13, this.locationTrackingEnabled);
          }
          if (!java.util.Arrays.equals(this.profileId, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
            output.writeBytes(14, this.profileId);
          }
          if (this.firstOccurrence != EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED) {
            output.writeInt32(15, this.firstOccurrence);
          }
          if (this.globalNumber != 0L) {
            output.writeUInt64(16, this.globalNumber);
          }
          if (this.numberOfType != 0L) {
            output.writeUInt64(17, this.numberOfType);
          }
          if (this.source != EventProto.ReportMessage.Session.Event.NATIVE) {
            output.writeInt32(22, this.source);
          }
          if (this.attributionIdChanged != false) {
            output.writeBool(23, this.attributionIdChanged);
          }
          if (this.openId != 1L) {
            output.writeUInt64(24, this.openId);
          }
          if (this.extras != null && this.extras.length > 0) {
            for (int i = 0; i < this.extras.length; i++) {
              EventProto.ReportMessage.Session.Event.ExtrasEntry element = this.extras[i];
              if (element != null) {
                output.writeMessage(25, element);
              }
            }
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(1, this.numberInSession);
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(2, this.time);
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(3, this.type);
          if (!this.name.equals("")) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(4, this.name);
          }
          if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBytesSize(5, this.value);
          }
          if (this.location != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, this.location);
          }
          if (this.networkInfo != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, this.networkInfo);
          }
          if (!this.environment.equals("")) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(8, this.environment);
          }
          if (this.bytesTruncated != 0) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt32Size(10, this.bytesTruncated);
          }
          if (this.encodingType != EventProto.ReportMessage.Session.Event.NONE) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(12, this.encodingType);
          }
          if (this.locationTrackingEnabled != EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(13, this.locationTrackingEnabled);
          }
          if (!java.util.Arrays.equals(this.profileId, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBytesSize(14, this.profileId);
          }
          if (this.firstOccurrence != EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(15, this.firstOccurrence);
          }
          if (this.globalNumber != 0L) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt64Size(16, this.globalNumber);
          }
          if (this.numberOfType != 0L) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt64Size(17, this.numberOfType);
          }
          if (this.source != EventProto.ReportMessage.Session.Event.NATIVE) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(22, this.source);
          }
          if (this.attributionIdChanged != false) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(23, this.attributionIdChanged);
          }
          if (this.openId != 1L) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeUInt64Size(24, this.openId);
          }
          if (this.extras != null && this.extras.length > 0) {
            for (int i = 0; i < this.extras.length; i++) {
              EventProto.ReportMessage.Session.Event.ExtrasEntry element = this.extras[i];
              if (element != null) {
                size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(25, element);
              }
            }
          }
          return size;
        }

        @Override
        public Event mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.numberInSession = input.readUInt64();
                break;
              }
              case 16: {
                this.time = input.readUInt64();
                break;
              }
              case 24: {
                this.type = input.readUInt32();
                break;
              }
              case 34: {
                this.name = input.readString();
                break;
              }
              case 42: {
                this.value = input.readBytes();
                break;
              }
              case 50: {
                if (this.location == null) {
                  this.location = new EventProto.ReportMessage.Location();
                }
                input.readMessage(this.location);
                break;
              }
              case 58: {
                if (this.networkInfo == null) {
                  this.networkInfo = new EventProto.ReportMessage.Session.Event.NetworkInfo();
                }
                input.readMessage(this.networkInfo);
                break;
              }
              case 66: {
                this.environment = input.readString();
                break;
              }
              case 80: {
                this.bytesTruncated = input.readUInt32();
                break;
              }
              case 96: {
                int value = input.readInt32();
                switch (value) {
                  case EventProto.ReportMessage.Session.Event.NONE:
                  case EventProto.ReportMessage.Session.Event.RSA_AES_CBC:
                  case EventProto.ReportMessage.Session.Event.GZIP:
                    this.encodingType = value;
                    break;
                }
                break;
              }
              case 104: {
                int value = input.readInt32();
                switch (value) {
                  case EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED:
                  case EventProto.ReportMessage.OPTIONAL_BOOL_FALSE:
                  case EventProto.ReportMessage.OPTIONAL_BOOL_TRUE:
                    this.locationTrackingEnabled = value;
                    break;
                }
                break;
              }
              case 114: {
                this.profileId = input.readBytes();
                break;
              }
              case 120: {
                int value = input.readInt32();
                switch (value) {
                  case EventProto.ReportMessage.OPTIONAL_BOOL_UNDEFINED:
                  case EventProto.ReportMessage.OPTIONAL_BOOL_FALSE:
                  case EventProto.ReportMessage.OPTIONAL_BOOL_TRUE:
                    this.firstOccurrence = value;
                    break;
                }
                break;
              }
              case 128: {
                this.globalNumber = input.readUInt64();
                break;
              }
              case 136: {
                this.numberOfType = input.readUInt64();
                break;
              }
              case 176: {
                int value = input.readInt32();
                switch (value) {
                  case EventProto.ReportMessage.Session.Event.NATIVE:
                  case EventProto.ReportMessage.Session.Event.JS:
                    this.source = value;
                    break;
                }
                break;
              }
              case 184: {
                this.attributionIdChanged = input.readBool();
                break;
              }
              case 192: {
                this.openId = input.readUInt64();
                break;
              }
              case 202: {
                int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 202);
                int i = this.extras == null ? 0 : this.extras.length;
                EventProto.ReportMessage.Session.Event.ExtrasEntry[] newArray =
                    new EventProto.ReportMessage.Session.Event.ExtrasEntry[i + arrayLength];
                if (i != 0) {
                  java.lang.System.arraycopy(this.extras, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = new EventProto.ReportMessage.Session.Event.ExtrasEntry();
                  input.readMessage(newArray[i]);
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = new EventProto.ReportMessage.Session.Event.ExtrasEntry();
                input.readMessage(newArray[i]);
                this.extras = newArray;
                break;
              }
            }
          }
        }

        public static Event parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Event(), data);
        }

        public static Event parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Event().mergeFrom(input);
        }
      }

      private static volatile Session[] _emptyArray;
      public static Session[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Session[0];
            }
          }
        }
        return _emptyArray;
      }

      // required uint64 id = 1;
      public long id;

      // required .ReportMessage.Session.SessionDesc session_desc = 2;
      public EventProto.ReportMessage.Session.SessionDesc sessionDesc;

      // repeated .ReportMessage.Session.Event events = 3;
      public EventProto.ReportMessage.Session.Event[] events;

      public Session() {
        clear();
      }

      public Session clear() {
        id = 0L;
        sessionDesc = null;
        events = EventProto.ReportMessage.Session.Event.emptyArray();
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeUInt64(1, this.id);
        if (this.sessionDesc != null) {
          output.writeMessage(2, this.sessionDesc);
        }
        if (this.events != null && this.events.length > 0) {
          for (int i = 0; i < this.events.length; i++) {
            EventProto.ReportMessage.Session.Event element = this.events[i];
            if (element != null) {
              output.writeMessage(3, element);
            }
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.id);
        if (this.sessionDesc != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.sessionDesc);
        }
        if (this.events != null && this.events.length > 0) {
          for (int i = 0; i < this.events.length; i++) {
            EventProto.ReportMessage.Session.Event element = this.events[i];
            if (element != null) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(3, element);
            }
          }
        }
        return size;
      }

      @Override
      public Session mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.id = input.readUInt64();
              break;
            }
            case 18: {
              if (this.sessionDesc == null) {
                this.sessionDesc = new EventProto.ReportMessage.Session.SessionDesc();
              }
              input.readMessage(this.sessionDesc);
              break;
            }
            case 26: {
              int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.events == null ? 0 : this.events.length;
              EventProto.ReportMessage.Session.Event[] newArray =
                  new EventProto.ReportMessage.Session.Event[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.events, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new EventProto.ReportMessage.Session.Event();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new EventProto.ReportMessage.Session.Event();
              input.readMessage(newArray[i]);
              this.events = newArray;
              break;
            }
          }
        }
      }

      public static Session parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Session(), data);
      }

      public static Session parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Session().mergeFrom(input);
      }
    }

    public static final class RequestParameters extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      public static final class Clid extends
          io.appmetrica.analytics.protobuf.nano.MessageNano {

        private static volatile Clid[] _emptyArray;
        public static Clid[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Clid[0];
              }
            }
          }
          return _emptyArray;
        }

        // required string name = 1;
        public java.lang.String name;

        // required uint64 value = 2;
        public long value;

        public Clid() {
          clear();
        }

        public Clid clear() {
          name = "";
          value = 0L;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeString(1, this.name);
          output.writeUInt64(2, this.value);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.name);
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(2, this.value);
          return size;
        }

        @Override
        public Clid mergeFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.name = input.readString();
                break;
              }
              case 16: {
                this.value = input.readUInt64();
                break;
              }
            }
          }
        }

        public static Clid parseFrom(byte[] data)
            throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
          return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Clid(), data);
        }

        public static Clid parseFrom(
                io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Clid().mergeFrom(input);
        }
      }

      private static volatile RequestParameters[] _emptyArray;
      public static RequestParameters[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new RequestParameters[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string uuid = 1;
      public java.lang.String uuid;

      // optional string device_id = 2;
      public java.lang.String deviceId;

      // optional string app_version_name = 4;
      public java.lang.String appVersionName;

      // optional uint32 kit_version = 5;
      public int kitVersion;

      // optional string os_version = 10;
      public java.lang.String osVersion;

      // optional string locale = 15;
      public java.lang.String locale;

      // optional bool is_rooted = 17;
      public boolean isRooted;

      // optional uint32 app_build_number = 18;
      public int appBuildNumber;

      // optional string ifv = 19;
      public java.lang.String ifv;

      // optional string adv_id = 21;
      public java.lang.String advId;

      // optional uint32 client_kit_version = 22;
      public int clientKitVersion;

      // repeated .ReportMessage.RequestParameters.Clid clids = 23;
      public EventProto.ReportMessage.RequestParameters.Clid[] clids;

      // optional string api_key_128 = 24;
      public java.lang.String apiKey128;

      public RequestParameters() {
        clear();
      }

      public RequestParameters clear() {
        uuid = "";
        deviceId = "";
        appVersionName = "";
        kitVersion = 0;
        osVersion = "";
        locale = "";
        isRooted = false;
        appBuildNumber = 0;
        ifv = "";
        advId = "";
        clientKitVersion = 0;
        clids = EventProto.ReportMessage.RequestParameters.Clid.emptyArray();
        apiKey128 = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.uuid.equals("")) {
          output.writeString(1, this.uuid);
        }
        if (!this.deviceId.equals("")) {
          output.writeString(2, this.deviceId);
        }
        if (!this.appVersionName.equals("")) {
          output.writeString(4, this.appVersionName);
        }
        if (this.kitVersion != 0) {
          output.writeUInt32(5, this.kitVersion);
        }
        if (!this.osVersion.equals("")) {
          output.writeString(10, this.osVersion);
        }
        if (!this.locale.equals("")) {
          output.writeString(15, this.locale);
        }
        if (this.isRooted != false) {
          output.writeBool(17, this.isRooted);
        }
        if (this.appBuildNumber != 0) {
          output.writeUInt32(18, this.appBuildNumber);
        }
        if (!this.ifv.equals("")) {
          output.writeString(19, this.ifv);
        }
        if (!this.advId.equals("")) {
          output.writeString(21, this.advId);
        }
        if (this.clientKitVersion != 0) {
          output.writeUInt32(22, this.clientKitVersion);
        }
        if (this.clids != null && this.clids.length > 0) {
          for (int i = 0; i < this.clids.length; i++) {
            EventProto.ReportMessage.RequestParameters.Clid element = this.clids[i];
            if (element != null) {
              output.writeMessage(23, element);
            }
          }
        }
        if (!this.apiKey128.equals("")) {
          output.writeString(24, this.apiKey128);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.uuid.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.uuid);
        }
        if (!this.deviceId.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.deviceId);
        }
        if (!this.appVersionName.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.appVersionName);
        }
        if (this.kitVersion != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(5, this.kitVersion);
        }
        if (!this.osVersion.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(10, this.osVersion);
        }
        if (!this.locale.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(15, this.locale);
        }
        if (this.isRooted != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(17, this.isRooted);
        }
        if (this.appBuildNumber != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(18, this.appBuildNumber);
        }
        if (!this.ifv.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(19, this.ifv);
        }
        if (!this.advId.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(21, this.advId);
        }
        if (this.clientKitVersion != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(22, this.clientKitVersion);
        }
        if (this.clids != null && this.clids.length > 0) {
          for (int i = 0; i < this.clids.length; i++) {
            EventProto.ReportMessage.RequestParameters.Clid element = this.clids[i];
            if (element != null) {
              size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(23, element);
            }
          }
        }
        if (!this.apiKey128.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(24, this.apiKey128);
        }
        return size;
      }

      @Override
      public RequestParameters mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.uuid = input.readString();
              break;
            }
            case 18: {
              this.deviceId = input.readString();
              break;
            }
            case 34: {
              this.appVersionName = input.readString();
              break;
            }
            case 40: {
              this.kitVersion = input.readUInt32();
              break;
            }
            case 82: {
              this.osVersion = input.readString();
              break;
            }
            case 122: {
              this.locale = input.readString();
              break;
            }
            case 136: {
              this.isRooted = input.readBool();
              break;
            }
            case 144: {
              this.appBuildNumber = input.readUInt32();
              break;
            }
            case 154: {
              this.ifv = input.readString();
              break;
            }
            case 170: {
              this.advId = input.readString();
              break;
            }
            case 176: {
              this.clientKitVersion = input.readUInt32();
              break;
            }
            case 186: {
              int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 186);
              int i = this.clids == null ? 0 : this.clids.length;
              EventProto.ReportMessage.RequestParameters.Clid[] newArray =
                  new EventProto.ReportMessage.RequestParameters.Clid[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.clids, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new EventProto.ReportMessage.RequestParameters.Clid();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new EventProto.ReportMessage.RequestParameters.Clid();
              input.readMessage(newArray[i]);
              this.clids = newArray;
              break;
            }
            case 194: {
              this.apiKey128 = input.readString();
              break;
            }
          }
        }
      }

      public static RequestParameters parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new RequestParameters(), data);
      }

      public static RequestParameters parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new RequestParameters().mergeFrom(input);
      }
    }

    public static final class EnvironmentVariable extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile EnvironmentVariable[] _emptyArray;
      public static EnvironmentVariable[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new EnvironmentVariable[0];
            }
          }
        }
        return _emptyArray;
      }

      // required string name = 1;
      public java.lang.String name;

      // required string value = 2;
      public java.lang.String value;

      public EnvironmentVariable() {
        clear();
      }

      public EnvironmentVariable clear() {
        name = "";
        value = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeString(1, this.name);
        output.writeString(2, this.value);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.value);
        return size;
      }

      @Override
      public EnvironmentVariable mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.name = input.readString();
              break;
            }
            case 18: {
              this.value = input.readString();
              break;
            }
          }
        }
      }

      public static EnvironmentVariable parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new EnvironmentVariable(), data);
      }

      public static EnvironmentVariable parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new EnvironmentVariable().mergeFrom(input);
      }
    }

    public static final class SimInfo extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile SimInfo[] _emptyArray;
      public static SimInfo[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new SimInfo[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional uint32 country_code = 1;
      public int countryCode;

      // optional uint32 operator_id = 2;
      public int operatorId;

      // optional string operator_name = 3;
      public java.lang.String operatorName;

      // optional bool data_roaming = 4 [default = false];
      public boolean dataRoaming;

      public SimInfo() {
        clear();
      }

      public SimInfo clear() {
        countryCode = 0;
        operatorId = 0;
        operatorName = "";
        dataRoaming = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.countryCode != 0) {
          output.writeUInt32(1, this.countryCode);
        }
        if (this.operatorId != 0) {
          output.writeUInt32(2, this.operatorId);
        }
        if (!this.operatorName.equals("")) {
          output.writeString(3, this.operatorName);
        }
        if (this.dataRoaming != false) {
          output.writeBool(4, this.dataRoaming);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.countryCode != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(1, this.countryCode);
        }
        if (this.operatorId != 0) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.operatorId);
        }
        if (!this.operatorName.equals("")) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.operatorName);
        }
        if (this.dataRoaming != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(4, this.dataRoaming);
        }
        return size;
      }

      @Override
      public SimInfo mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.countryCode = input.readUInt32();
              break;
            }
            case 16: {
              this.operatorId = input.readUInt32();
              break;
            }
            case 26: {
              this.operatorName = input.readString();
              break;
            }
            case 32: {
              this.dataRoaming = input.readBool();
              break;
            }
          }
        }
      }

      public static SimInfo parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new SimInfo(), data);
      }

      public static SimInfo parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new SimInfo().mergeFrom(input);
      }
    }

    private static volatile ReportMessage[] _emptyArray;
    public static ReportMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReportMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ReportMessage.Session sessions = 3;
    public EventProto.ReportMessage.Session[] sessions;

    // optional .ReportMessage.RequestParameters report_request_parameters = 4;
    public EventProto.ReportMessage.RequestParameters reportRequestParameters;

    // repeated .ReportMessage.EnvironmentVariable app_environment = 7;
    public EventProto.ReportMessage.EnvironmentVariable[] appEnvironment;

    // repeated .ReportMessage.SimInfo sim_info = 10;
    public EventProto.ReportMessage.SimInfo[] simInfo;

    // repeated string certificates_sha1_fingerprints = 11;
    public java.lang.String[] certificatesSha1Fingerprints;

    public ReportMessage() {
      clear();
    }

    public ReportMessage clear() {
      sessions = EventProto.ReportMessage.Session.emptyArray();
      reportRequestParameters = null;
      appEnvironment = EventProto.ReportMessage.EnvironmentVariable.emptyArray();
      simInfo = EventProto.ReportMessage.SimInfo.emptyArray();
      certificatesSha1Fingerprints = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sessions != null && this.sessions.length > 0) {
        for (int i = 0; i < this.sessions.length; i++) {
          EventProto.ReportMessage.Session element = this.sessions[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (this.reportRequestParameters != null) {
        output.writeMessage(4, this.reportRequestParameters);
      }
      if (this.appEnvironment != null && this.appEnvironment.length > 0) {
        for (int i = 0; i < this.appEnvironment.length; i++) {
          EventProto.ReportMessage.EnvironmentVariable element = this.appEnvironment[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.simInfo != null && this.simInfo.length > 0) {
        for (int i = 0; i < this.simInfo.length; i++) {
          EventProto.ReportMessage.SimInfo element = this.simInfo[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      if (this.certificatesSha1Fingerprints != null && this.certificatesSha1Fingerprints.length > 0) {
        for (int i = 0; i < this.certificatesSha1Fingerprints.length; i++) {
          java.lang.String element = this.certificatesSha1Fingerprints[i];
          if (element != null) {
            output.writeString(11, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sessions != null && this.sessions.length > 0) {
        for (int i = 0; i < this.sessions.length; i++) {
          EventProto.ReportMessage.Session element = this.sessions[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (this.reportRequestParameters != null) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.reportRequestParameters);
      }
      if (this.appEnvironment != null && this.appEnvironment.length > 0) {
        for (int i = 0; i < this.appEnvironment.length; i++) {
          EventProto.ReportMessage.EnvironmentVariable element = this.appEnvironment[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.simInfo != null && this.simInfo.length > 0) {
        for (int i = 0; i < this.simInfo.length; i++) {
          EventProto.ReportMessage.SimInfo element = this.simInfo[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      if (this.certificatesSha1Fingerprints != null && this.certificatesSha1Fingerprints.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.certificatesSha1Fingerprints.length; i++) {
          java.lang.String element = this.certificatesSha1Fingerprints[i];
          if (element != null) {
            dataCount++;
            dataSize += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public ReportMessage mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 26: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.sessions == null ? 0 : this.sessions.length;
            EventProto.ReportMessage.Session[] newArray =
                new EventProto.ReportMessage.Session[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.sessions, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new EventProto.ReportMessage.Session();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new EventProto.ReportMessage.Session();
            input.readMessage(newArray[i]);
            this.sessions = newArray;
            break;
          }
          case 34: {
            if (this.reportRequestParameters == null) {
              this.reportRequestParameters = new EventProto.ReportMessage.RequestParameters();
            }
            input.readMessage(this.reportRequestParameters);
            break;
          }
          case 58: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.appEnvironment == null ? 0 : this.appEnvironment.length;
            EventProto.ReportMessage.EnvironmentVariable[] newArray =
                new EventProto.ReportMessage.EnvironmentVariable[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.appEnvironment, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new EventProto.ReportMessage.EnvironmentVariable();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new EventProto.ReportMessage.EnvironmentVariable();
            input.readMessage(newArray[i]);
            this.appEnvironment = newArray;
            break;
          }
          case 82: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.simInfo == null ? 0 : this.simInfo.length;
            EventProto.ReportMessage.SimInfo[] newArray =
                new EventProto.ReportMessage.SimInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.simInfo, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new EventProto.ReportMessage.SimInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new EventProto.ReportMessage.SimInfo();
            input.readMessage(newArray[i]);
            this.simInfo = newArray;
            break;
          }
          case 90: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 90);
            int i = this.certificatesSha1Fingerprints == null ? 0 : this.certificatesSha1Fingerprints.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.certificatesSha1Fingerprints, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.certificatesSha1Fingerprints = newArray;
            break;
          }
        }
      }
    }

    public static ReportMessage parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new ReportMessage(), data);
    }

    public static ReportMessage parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReportMessage().mergeFrom(input);
    }
  }
}
