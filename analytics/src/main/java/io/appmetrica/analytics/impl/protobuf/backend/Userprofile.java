// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.impl.protobuf.backend;

@SuppressWarnings("hiding")
public interface Userprofile {

  public static final class Profile extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    public static final class AttributeMetaInfo extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile AttributeMetaInfo[] _emptyArray;
      public static AttributeMetaInfo[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new AttributeMetaInfo[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional bool set_if_undefined = 1 [default = false];
      public boolean setIfUndefined;

      // optional bool reset = 2 [default = false];
      public boolean reset;

      public AttributeMetaInfo() {
        clear();
      }

      public AttributeMetaInfo clear() {
        setIfUndefined = false;
        reset = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.setIfUndefined != false) {
          output.writeBool(1, this.setIfUndefined);
        }
        if (this.reset != false) {
          output.writeBool(2, this.reset);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.setIfUndefined != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(1, this.setIfUndefined);
        }
        if (this.reset != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(2, this.reset);
        }
        return size;
      }

      @Override
      public AttributeMetaInfo mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.setIfUndefined = input.readBool();
              break;
            }
            case 16: {
              this.reset = input.readBool();
              break;
            }
          }
        }
      }

      public static AttributeMetaInfo parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new AttributeMetaInfo(), data);
      }

      public static AttributeMetaInfo parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new AttributeMetaInfo().mergeFrom(input);
      }
    }

    public static final class AttributeValue extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile AttributeValue[] _emptyArray;
      public static AttributeValue[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new AttributeValue[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional bytes string_value = 1;
      public byte[] stringValue;

      // optional double number_value = 2;
      public double numberValue;

      // optional double counter_modification = 3;
      public double counterModification;

      // optional bool bool_value = 4;
      public boolean boolValue;

      public AttributeValue() {
        clear();
      }

      public AttributeValue clear() {
        stringValue = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
        numberValue = 0D;
        counterModification = 0D;
        boolValue = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!java.util.Arrays.equals(this.stringValue, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
          output.writeBytes(1, this.stringValue);
        }
        if (java.lang.Double.doubleToLongBits(this.numberValue)
            != java.lang.Double.doubleToLongBits(0D)) {
          output.writeDouble(2, this.numberValue);
        }
        if (java.lang.Double.doubleToLongBits(this.counterModification)
            != java.lang.Double.doubleToLongBits(0D)) {
          output.writeDouble(3, this.counterModification);
        }
        if (this.boolValue != false) {
          output.writeBool(4, this.boolValue);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!java.util.Arrays.equals(this.stringValue, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBytesSize(1, this.stringValue);
        }
        if (java.lang.Double.doubleToLongBits(this.numberValue)
            != java.lang.Double.doubleToLongBits(0D)) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(2, this.numberValue);
        }
        if (java.lang.Double.doubleToLongBits(this.counterModification)
            != java.lang.Double.doubleToLongBits(0D)) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(3, this.counterModification);
        }
        if (this.boolValue != false) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(4, this.boolValue);
        }
        return size;
      }

      @Override
      public AttributeValue mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.stringValue = input.readBytes();
              break;
            }
            case 17: {
              this.numberValue = input.readDouble();
              break;
            }
            case 25: {
              this.counterModification = input.readDouble();
              break;
            }
            case 32: {
              this.boolValue = input.readBool();
              break;
            }
          }
        }
      }

      public static AttributeValue parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new AttributeValue(), data);
      }

      public static AttributeValue parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new AttributeValue().mergeFrom(input);
      }
    }

    public static final class Attribute extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      // enum Type
      public static final int STRING = 0;
      public static final int NUMBER = 1;
      public static final int COUNTER = 2;
      public static final int BOOL = 3;

      private static volatile Attribute[] _emptyArray;
      public static Attribute[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Attribute[0];
            }
          }
        }
        return _emptyArray;
      }

      // required bytes name = 1;
      public byte[] name;

      // required .Profile.Attribute.Type type = 2;
      public int type;

      // required .Profile.AttributeMetaInfo meta_info = 3;
      public Userprofile.Profile.AttributeMetaInfo metaInfo;

      // required .Profile.AttributeValue value = 4;
      public Userprofile.Profile.AttributeValue value;

      public Attribute() {
        clear();
      }

      public Attribute clear() {
        name = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
        type = Userprofile.Profile.Attribute.STRING;
        metaInfo = null;
        value = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeBytes(1, this.name);
        output.writeInt32(2, this.type);
        if (this.metaInfo != null) {
          output.writeMessage(3, this.metaInfo);
        }
        if (this.value != null) {
          output.writeMessage(4, this.value);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.name);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.type);
        if (this.metaInfo != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.metaInfo);
        }
        if (this.value != null) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(4, this.value);
        }
        return size;
      }

      @Override
      public Attribute mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.name = input.readBytes();
              break;
            }
            case 16: {
              int value = input.readInt32();
              switch (value) {
                case Userprofile.Profile.Attribute.STRING:
                case Userprofile.Profile.Attribute.NUMBER:
                case Userprofile.Profile.Attribute.COUNTER:
                case Userprofile.Profile.Attribute.BOOL:
                  this.type = value;
                  break;
              }
              break;
            }
            case 26: {
              if (this.metaInfo == null) {
                this.metaInfo = new Userprofile.Profile.AttributeMetaInfo();
              }
              input.readMessage(this.metaInfo);
              break;
            }
            case 34: {
              if (this.value == null) {
                this.value = new Userprofile.Profile.AttributeValue();
              }
              input.readMessage(this.value);
              break;
            }
          }
        }
      }

      public static Attribute parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Attribute(), data);
      }

      public static Attribute parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Attribute().mergeFrom(input);
      }
    }

    private static volatile Profile[] _emptyArray;
    public static Profile[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Profile[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .Profile.Attribute attributes = 1;
    public Userprofile.Profile.Attribute[] attributes;

    public Profile() {
      clear();
    }

    public Profile clear() {
      attributes = Userprofile.Profile.Attribute.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          Userprofile.Profile.Attribute element = this.attributes[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          Userprofile.Profile.Attribute element = this.attributes[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public Profile mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.attributes == null ? 0 : this.attributes.length;
            Userprofile.Profile.Attribute[] newArray =
                new Userprofile.Profile.Attribute[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.attributes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Userprofile.Profile.Attribute();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Userprofile.Profile.Attribute();
            input.readMessage(newArray[i]);
            this.attributes = newArray;
            break;
          }
        }
      }
    }

    public static Profile parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new Profile(), data);
    }

    public static Profile parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Profile().mergeFrom(input);
    }
  }
}
