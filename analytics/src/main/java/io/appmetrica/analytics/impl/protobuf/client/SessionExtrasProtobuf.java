// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.impl.protobuf.client;

@SuppressWarnings("hiding")
public interface SessionExtrasProtobuf {

  public static final class SessionStateExtrasEntry extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    private static volatile SessionStateExtrasEntry[] _emptyArray;
    public static SessionStateExtrasEntry[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SessionStateExtrasEntry[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes key = 1;
    public byte[] key;

    // optional bytes value = 2;
    public byte[] value;

    public SessionStateExtrasEntry() {
      clear();
    }

    public SessionStateExtrasEntry clear() {
      key = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      value = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!java.util.Arrays.equals(this.key, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(1, this.key);
      }
      if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(2, this.value);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!java.util.Arrays.equals(this.key, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.key);
      }
      if (!java.util.Arrays.equals(this.value, io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.value);
      }
      return size;
    }

    @Override
    public SessionStateExtrasEntry mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.key = input.readBytes();
            break;
          }
          case 18: {
            this.value = input.readBytes();
            break;
          }
        }
      }
    }

    public static SessionStateExtrasEntry parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new SessionStateExtrasEntry(), data);
    }

    public static SessionStateExtrasEntry parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SessionStateExtrasEntry().mergeFrom(input);
    }
  }

  public static final class SessionExtras extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    private static volatile SessionExtras[] _emptyArray;
    public static SessionExtras[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SessionExtras[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .SessionStateExtrasEntry extras = 1;
    public SessionExtrasProtobuf.SessionStateExtrasEntry[] extras;

    public SessionExtras() {
      clear();
    }

    public SessionExtras clear() {
      extras = SessionExtrasProtobuf.SessionStateExtrasEntry.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.extras != null && this.extras.length > 0) {
        for (int i = 0; i < this.extras.length; i++) {
          SessionExtrasProtobuf.SessionStateExtrasEntry element = this.extras[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.extras != null && this.extras.length > 0) {
        for (int i = 0; i < this.extras.length; i++) {
          SessionExtrasProtobuf.SessionStateExtrasEntry element = this.extras[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public SessionExtras mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.extras == null ? 0 : this.extras.length;
            SessionExtrasProtobuf.SessionStateExtrasEntry[] newArray =
                new SessionExtrasProtobuf.SessionStateExtrasEntry[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.extras, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new SessionExtrasProtobuf.SessionStateExtrasEntry();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new SessionExtrasProtobuf.SessionStateExtrasEntry();
            input.readMessage(newArray[i]);
            this.extras = newArray;
            break;
          }
        }
      }
    }

    public static SessionExtras parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new SessionExtras(), data);
    }

    public static SessionExtras parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SessionExtras().mergeFrom(input);
    }
  }
}
