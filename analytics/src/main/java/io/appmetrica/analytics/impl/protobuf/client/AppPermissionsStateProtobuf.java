// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.impl.protobuf.client;

@SuppressWarnings("hiding")
public interface AppPermissionsStateProtobuf {

  public static final class AppPermissionsState extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    public static final class PermissionState extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile PermissionState[] _emptyArray;
      public static PermissionState[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new PermissionState[0];
            }
          }
        }
        return _emptyArray;
      }

      // required string name = 1;
      public java.lang.String name;

      // required bool enabled = 2;
      public boolean enabled;

      public PermissionState() {
        clear();
      }

      public PermissionState clear() {
        name = "";
        enabled = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeString(1, this.name);
        output.writeBool(2, this.enabled);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.enabled);
        return size;
      }

      @Override
      public PermissionState mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.name = input.readString();
              break;
            }
            case 16: {
              this.enabled = input.readBool();
              break;
            }
          }
        }
      }

      public static PermissionState parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new PermissionState(), data);
      }

      public static PermissionState parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new PermissionState().mergeFrom(input);
      }
    }

    public static final class BackgroundRestrictionsState extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      // enum AppStandByBucket
      public static final int UNDEFINED = 0;
      public static final int ACTIVE = 1;
      public static final int WORKING_SET = 2;
      public static final int FREQUENT = 3;
      public static final int RARE = 4;
      public static final int RESTRICTED = 5;

      // enum OptionalBool
      public static final int OPTIONAL_BOOL_UNDEFINED = -1;
      public static final int OPTIONAL_BOOL_FALSE = 0;
      public static final int OPTIONAL_BOOL_TRUE = 1;

      private static volatile BackgroundRestrictionsState[] _emptyArray;
      public static BackgroundRestrictionsState[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new BackgroundRestrictionsState[0];
            }
          }
        }
        return _emptyArray;
      }

      // required .AppPermissionsState.BackgroundRestrictionsState.AppStandByBucket app_standby_bucket = 2 [default = UNDEFINED];
      public int appStandbyBucket;

      // required .AppPermissionsState.BackgroundRestrictionsState.OptionalBool background_restricted = 3 [default = OPTIONAL_BOOL_UNDEFINED];
      public int backgroundRestricted;

      public BackgroundRestrictionsState() {
        clear();
      }

      public BackgroundRestrictionsState clear() {
        appStandbyBucket = AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.UNDEFINED;
        backgroundRestricted = AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.OPTIONAL_BOOL_UNDEFINED;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(2, this.appStandbyBucket);
        output.writeInt32(3, this.backgroundRestricted);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.appStandbyBucket);
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.backgroundRestricted);
        return size;
      }

      @Override
      public BackgroundRestrictionsState mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 16: {
              int value = input.readInt32();
              switch (value) {
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.UNDEFINED:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.ACTIVE:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.WORKING_SET:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.FREQUENT:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.RARE:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.RESTRICTED:
                  this.appStandbyBucket = value;
                  break;
              }
              break;
            }
            case 24: {
              int value = input.readInt32();
              switch (value) {
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.OPTIONAL_BOOL_UNDEFINED:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.OPTIONAL_BOOL_FALSE:
                case AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState.OPTIONAL_BOOL_TRUE:
                  this.backgroundRestricted = value;
                  break;
              }
              break;
            }
          }
        }
      }

      public static BackgroundRestrictionsState parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new BackgroundRestrictionsState(), data);
      }

      public static BackgroundRestrictionsState parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new BackgroundRestrictionsState().mergeFrom(input);
      }
    }

    private static volatile AppPermissionsState[] _emptyArray;
    public static AppPermissionsState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AppPermissionsState[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .AppPermissionsState.PermissionState permissions = 1;
    public AppPermissionsStateProtobuf.AppPermissionsState.PermissionState[] permissions;

    // optional .AppPermissionsState.BackgroundRestrictionsState background_restrictions_state = 2;
    public AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState backgroundRestrictionsState;

    // repeated string available_providers = 3;
    public java.lang.String[] availableProviders;

    public AppPermissionsState() {
      clear();
    }

    public AppPermissionsState clear() {
      permissions = AppPermissionsStateProtobuf.AppPermissionsState.PermissionState.emptyArray();
      backgroundRestrictionsState = null;
      availableProviders = io.appmetrica.analytics.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.permissions != null && this.permissions.length > 0) {
        for (int i = 0; i < this.permissions.length; i++) {
          AppPermissionsStateProtobuf.AppPermissionsState.PermissionState element = this.permissions[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.backgroundRestrictionsState != null) {
        output.writeMessage(2, this.backgroundRestrictionsState);
      }
      if (this.availableProviders != null && this.availableProviders.length > 0) {
        for (int i = 0; i < this.availableProviders.length; i++) {
          java.lang.String element = this.availableProviders[i];
          if (element != null) {
            output.writeString(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.permissions != null && this.permissions.length > 0) {
        for (int i = 0; i < this.permissions.length; i++) {
          AppPermissionsStateProtobuf.AppPermissionsState.PermissionState element = this.permissions[i];
          if (element != null) {
            size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.backgroundRestrictionsState != null) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.backgroundRestrictionsState);
      }
      if (this.availableProviders != null && this.availableProviders.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.availableProviders.length; i++) {
          java.lang.String element = this.availableProviders[i];
          if (element != null) {
            dataCount++;
            dataSize += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public AppPermissionsState mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.permissions == null ? 0 : this.permissions.length;
            AppPermissionsStateProtobuf.AppPermissionsState.PermissionState[] newArray =
                new AppPermissionsStateProtobuf.AppPermissionsState.PermissionState[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.permissions, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new AppPermissionsStateProtobuf.AppPermissionsState.PermissionState();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new AppPermissionsStateProtobuf.AppPermissionsState.PermissionState();
            input.readMessage(newArray[i]);
            this.permissions = newArray;
            break;
          }
          case 18: {
            if (this.backgroundRestrictionsState == null) {
              this.backgroundRestrictionsState = new AppPermissionsStateProtobuf.AppPermissionsState.BackgroundRestrictionsState();
            }
            input.readMessage(this.backgroundRestrictionsState);
            break;
          }
          case 26: {
            int arrayLength = io.appmetrica.analytics.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.availableProviders == null ? 0 : this.availableProviders.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.availableProviders, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.availableProviders = newArray;
            break;
          }
        }
      }
    }

    public static AppPermissionsState parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new AppPermissionsState(), data);
    }

    public static AppPermissionsState parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AppPermissionsState().mergeFrom(input);
    }
  }
}
