// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.appmetrica.analytics.billing.impl.protobuf.client;

@SuppressWarnings("hiding")
public interface RemoteBillingConfigProtobuf {

  public static final class RemoteBillingConfig extends
      io.appmetrica.analytics.protobuf.nano.MessageNano {

    public static final class BillingConfig extends
        io.appmetrica.analytics.protobuf.nano.MessageNano {

      private static volatile BillingConfig[] _emptyArray;
      public static BillingConfig[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new BillingConfig[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional int32 sendFrequencySeconds = 1 [default = 86400];
      public int sendFrequencySeconds;

      // optional int32 firstCollectingInappMaxAgeSeconds = 2 [default = 86400];
      public int firstCollectingInappMaxAgeSeconds;

      public BillingConfig() {
        clear();
      }

      public BillingConfig clear() {
        sendFrequencySeconds = 86400;
        firstCollectingInappMaxAgeSeconds = 86400;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.sendFrequencySeconds != 86400) {
          output.writeInt32(1, this.sendFrequencySeconds);
        }
        if (this.firstCollectingInappMaxAgeSeconds != 86400) {
          output.writeInt32(2, this.firstCollectingInappMaxAgeSeconds);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.sendFrequencySeconds != 86400) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.sendFrequencySeconds);
        }
        if (this.firstCollectingInappMaxAgeSeconds != 86400) {
          size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.firstCollectingInappMaxAgeSeconds);
        }
        return size;
      }

      @Override
      public BillingConfig mergeFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.sendFrequencySeconds = input.readInt32();
              break;
            }
            case 16: {
              this.firstCollectingInappMaxAgeSeconds = input.readInt32();
              break;
            }
          }
        }
      }

      public static BillingConfig parseFrom(byte[] data)
          throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
        return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new BillingConfig(), data);
      }

      public static BillingConfig parseFrom(
              io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new BillingConfig().mergeFrom(input);
      }
    }

    private static volatile RemoteBillingConfig[] _emptyArray;
    public static RemoteBillingConfig[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            io.appmetrica.analytics.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RemoteBillingConfig[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool enabled = 1 [default = true];
    public boolean enabled;

    // optional .RemoteBillingConfig.BillingConfig config = 2;
    public RemoteBillingConfigProtobuf.RemoteBillingConfig.BillingConfig config;

    public RemoteBillingConfig() {
      clear();
    }

    public RemoteBillingConfig clear() {
      enabled = true;
      config = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.enabled != true) {
        output.writeBool(1, this.enabled);
      }
      if (this.config != null) {
        output.writeMessage(2, this.config);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.enabled != true) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.enabled);
      }
      if (this.config != null) {
        size += io.appmetrica.analytics.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.config);
      }
      return size;
    }

    @Override
    public RemoteBillingConfig mergeFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!io.appmetrica.analytics.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.enabled = input.readBool();
            break;
          }
          case 18: {
            if (this.config == null) {
              this.config = new RemoteBillingConfigProtobuf.RemoteBillingConfig.BillingConfig();
            }
            input.readMessage(this.config);
            break;
          }
        }
      }
    }

    public static RemoteBillingConfig parseFrom(byte[] data)
        throws io.appmetrica.analytics.protobuf.nano.InvalidProtocolBufferNanoException {
      return io.appmetrica.analytics.protobuf.nano.MessageNano.mergeFrom(new RemoteBillingConfig(), data);
    }

    public static RemoteBillingConfig parseFrom(
            io.appmetrica.analytics.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RemoteBillingConfig().mergeFrom(input);
    }
  }
}
